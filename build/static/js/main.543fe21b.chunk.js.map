{"version":3,"sources":["constants/routes.js","component/styles/Menu.js","component/NavBar/NavBar.js","component/styles/Input.js","component/styles/Button.js","component/Login/Login.js","component/styles/Heading.js","component/styles/ParentContainer.js","component/styles/SubmitBut.js","component/Home/Home.js","component/EditUser/EditUser.js","component/ShowUser/ShowUser.js","component/MapContainer/MapContainer.js","component/styles/CrawlContainer.js","component/LocationsContainer/LocationsContainer.js","component/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["HOME","Menu","styled","div","_templateObject","NavBar","_ref","currentUser","doLogout","react_default","a","createElement","styles_Menu","src","width","react_router_dom","to","routes","activeClassName","exact","concat","_id","username","key","onClick","Input","input","Input_templateObject","Button","button","Button_templateObject","Login","state","password","logged","changeHandler","e","_this","setState","Object","defineProperty","target","name","value","onSubmit","_callee","loginResponse","parsedResponse","regenerator_default","wrap","_context","prev","next","preventDefault","fetch","method","credentials","body","JSON","stringify","headers","Content-type","sent","json","success","props","doSetCurrentUser","user","stop","_this$state","this","react_router","styles_Input","type","onChange","placeholder","styles_Button","Component","Heading","h1","Heading_templateObject","ParentContainer","ParentContainer_templateObject","SubmitBut","SubmitBut_templateObject","withRouter","styles_ParentContainer","styles_Heading","className","styles_SubmitBut","editUser","handleFormChange","userToEdit","email","ShowUser","locations","doGetUser","parsedUser","match","params","id","abrupt","t0","console","log","doDeleteLocation","_callee2","deleteLocation","deleteLocationJson","_context2","_callee3","editUserResponse","editUserJson","_context3","Content-Type","objectSpread","_this2","then","_ref4","_this3","map","r","i","component_EditUser_EditUser","AnyReactComponent","image","MapContainer","random","style","height","lib_default","bootstrapURLKeys","defaultCenter","center","defaultZoom","zoom","location","MapContainer_AnyReactComponent","lat","coordinates","latitude","lng","longitude","defaultProps","CrawlContainer","CrawlContainer_templateObject","Locations","randomCrawl","getLocations","search","locationsParsed","shuffledArray","shuffleArray","data","doAddCrawl","url","addCrawl","userJson","addAllCrawl","handleChange","currentTarget","array","length","j","Math","floor","temp","slice","styles_CrawlContainer","href","image_url","display_address","rating","review_count","some","component_MapContainer_MapContainer","Register","registerResponse","Register_RegisterForm","RegisterForm","_ref2","htmlFor","App","history","push","component_NavBar_NavBar","path","render","component_Home_Home","LocationsContainer","component_ShowUser_ShowUser","component_Register_Register","component_Login_Login","Boolean","window","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.543fe21b.chunk.js","sourcesContent":["export const HOME = '/'\n// export const POSTS = '/posts'\nexport const USERS = '/users'\nexport const LOGIN = '/login'\nexport const LOGOUT = '/logout'\nexport const LOCATIONS = '/locations'\nexport const REGISTER = '/register'","import styled from \"styled-components\";\n\nconst Menu = styled.div`\ncolor: #FFFFFF;\nbackground-color: #FF009D;\npadding: 30px;\nheight: 225px;\n\n\n.selected {\n    color: white;\n  }\n\n  a {\n    margin: 20px 10px;\n  }\n\n  a:link, a:visited {\n    background-color: #FFED03;\n    color: black;\n    padding: 14px 25px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n\n  }\n  \n  a:hover, a:active {\n    background-color: #FF009D;\n    color: white;\n    border-bottom: 2px solid yellow;\n\n  }\n\n  img {\n    vertical-align: middle;\n  }\n`;\n\nexport default Menu;","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport * as routes from '../../constants/routes'\nimport Menu from '../styles/Menu';\n// import './NavBar.css'\n\nconst NavBar = ({currentUser, doLogout}) =>\n  <Menu>\n    <h1>LA Taco Crawl <img src=\"../images/tacos.png\" width=\"80px\"></img></h1>\n    {/* <NavLink exact activeClassName=\"selected\" to={routes.ROOT}>ROOT</NavLink> */}\n    <NavLink to={routes.HOME} activeClassName=\"selected\">Home</NavLink>\n    {\n      currentUser\n        && <NavLink exact to={`${routes.USERS}/${currentUser._id}`}\n        activeClassName=\"selected\">{currentUser.username}'s Profile </NavLink>\n    }\n    <NavLink to={routes.LOCATIONS} activeClassName=\"selected\">Crawl</NavLink>\n    {\n       currentUser\n       ? <NavLink key ={1}to={routes.HOME} onClick={doLogout}>Logout</NavLink> \n       : [<NavLink key={2} to={routes.REGISTER} activeClassName=\"selected\">Register </NavLink>, \n       <NavLink key={3} to={'/login'} activeClassName=\"selected\">Login </NavLink>]\n    }\n  </Menu>\n\n\n\n\nexport default NavBar\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  width: 50%;\n  text-align: center;\n  border: 1px black solid;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 16px;\n  background: white;\n  margin: 10px;\n`;\n\nexport default Input;","import styled from \"styled-components\";\n\nconst Button = styled.button`\n  width: 25%;\n  text-align: center;\n  border: 1px black solid;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 16px;\n  background: white;\n  margin: 10px;\n`;\n\nexport default Button;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Input from '../styles/Input'\nimport Button from '../styles/Button'\n\nclass Login extends Component {\n    state = {\n        username: '',\n        password: '',\n        logged: false\n    }\n\n    changeHandler = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    };\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        const loginResponse = await fetch('/users/login', {\n            method: 'POST',\n            credentials: 'include',\n            body: JSON.stringify(this.state),\n            headers:{\n                \"Content-type\" : 'application/json'\n            }\n        })\n\n        const parsedResponse = await loginResponse.json();\n        if(parsedResponse.success) {\n          this.props.doSetCurrentUser(parsedResponse.user)\n            this.setState({\n                logged: true,\n            })\n        }\n    }\n\n    render() {\n      const { username, password } = this.state\n      return (\n        this.state.logged\n        ? <Redirect to={`/users/${this.props.currentUser._id}`} />\n        : <form onSubmit={this.onSubmit}>\n            <Input type=\"text\" name=\"username\" value={username} onChange={this.changeHandler} placeholder=\"username\" />\n            <Input type=\"password\" name=\"password\" value={password} onChange={this.changeHandler} placeholder=\"password\" />\n            <Button type='submit'>Submit</Button>\n          </form>\n      )\n    }\n}\n\nexport default Login\n","import styled from \"styled-components\";\n\nconst Heading = styled.h1`\n    font-family: 'Raleway', sans-serif;\n    font-size: 100px;\n    color: #FF009D;\n    line-height: 0.8;\n    `;\n\nexport default Heading;","import styled from \"styled-components\";\n\nconst ParentContainer = styled.div`\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\nalign-content: center;\nwidth: 50vw;\njustify-content: space-between;\nmargin: 15vh 49vw;\n\n.pMain {\n    font-size: 28px;\n    margin: 0 2vw;\n    padding: 2vw;\n}\n\n.spanHighlight {\n    background-color: #FFED03;\n}\n`;\n\nexport default ParentContainer;","import styled from \"styled-components\";\n\nconst SubmitBut = styled.button`\n  width: 25%;\n  text-align: center;\n  border:none;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 18px;\n  background: white;\n  margin: 10px;\n\n  a:link, a:visited {\n    background-color: #FFED03;\n    color: black;\n    padding: 14px 25px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n\n  }\n  \n  a:hover, a:active {\n    background-color: #FF009D;\n    color: white;\n    border-bottom: 2px solid yellow;\n\n  }\n`;\n\nexport default SubmitBut;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Heading from '../styles/Heading';\nimport ParentContainer from '../styles/ParentContainer';\nimport { NavLink } from 'react-router-dom'\nimport * as routes from '../../constants/routes'\nimport Button from '../styles/Button';\nimport SubmitBut from '../styles/SubmitBut';\n\nconst Home = () => {\n    return (\n        <ParentContainer>\n        <div> <Heading>Taco Crawl?</Heading> </div>\n        <div><p className=\"pMain\">When individuals go <span className=\"spanHighlight\">eating tacos from place to place.</span> Usually they eat so much at the first few places that by the time they get to the last one they're <span className=\"spanHighlight\">crawling from eating and drinking so much.</span></p>\n        <br />\n        <SubmitBut>\n        <NavLink to={routes.LOCATIONS} activeClassName=\"selected\">Let's Crawl!</NavLink>\n        </SubmitBut>\n        </div>\n        </ParentContainer>\n    )\n}\n\nexport default withRouter(Home)","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Input from '../styles/Input'\n\nconst EditUser = (props) =>  {\n\n    const onSubmit = ()=>{\n        // e.preventDefault();\n        props.editUser();\n    }\n\n    return (\n      <div>\n        <h4> Edit User</h4>\n        <form onSubmit={onSubmit}>\n          <label>\n            user name: < Input type=\"text\" name=\"username\" onChange={props.handleFormChange} value={props.userToEdit.username} placeholder='username'/><br />\n            password: < Input type=\"password\" name=\"password\" onChange={props.handleFormChange} value={props.userToEdit.password} placeholder='password'/><br />\n            email: < Input type=\"text\" name=\"email\" onChange={props.handleFormChange} value={props.userToEdit.email} placeholder='email'/><br />\n          </label>\n          < Input type='Submit'/>\n        </form>\n      </div>\n  \n      )\n    }\n\nexport default withRouter(EditUser)","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom'\nimport EditUser from '../EditUser/EditUser'\n\n\n\nclass ShowUser extends Component {\n  state = {\n    user: {},\n    locations: [],\n    userToEdit: {\n      username: '',\n      password: '',\n      email: ''\n    },\n    // colors: [\"#FFFFFF\", \"#B0366F\", \"#FFED03\"]\n  }\n\n  componentDidMount() {\n    this.doGetUser()\n      .then(({user}) => this.setState({user}))\n  }\n\n  doGetUser = async () => {\n    try {\n      const user = await fetch(`/users/${this.props.match.params.id}`)\n      const parsedUser = await user.json()\n      return parsedUser \n    } catch(err) {\n      console.log(err)\n    }\n  }\n\n  doDeleteLocation = async (id, e) => {\n    try {\n      const deleteLocation = await fetch(\n        `/users/${this.props.match.params.id}/locations/${id}`,\n        {\n          method: \"DELETE\"\n        }\n      );\n      const deleteLocationJson = await deleteLocation.json();\n      this.setState({\n        user: deleteLocationJson.user\n      })\n    } catch (err) {\n      console.log(err, 'error')\n    }\n  }\n\n  // changeBg() {\n  //   const { colors } = this.state;\n  //   const color = colors[Math.floor(Math.random() * colors.length)];\n  //   document.body.style.backgroundColor = color;\n  // }\n\n  editUser = async () => {\n      try { const editUserResponse = await fetch(`/users/update/${this.props.match.params.id}`, {\n        method: 'PUT',\n        credentials: 'include',\n        body: JSON.stringify(this.state.userToEdit),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n        \n      })\n      console.log(editUserResponse)\n      const editUserJson = await editUserResponse.json();\n      console.log(editUserJson)\n      this.setState({\n        user: editUserJson\n      },()=>{\n        this.props.doSetCurrentUser(editUserJson)\n      })\n        \n      } catch(err){\n        console.log(err)\n      }\n    }\n\n    handleFormChange = (e) => {\n      this.setState({\n        userToEdit: {\n          ...this.state.userToEdit,\n          [e.target.name]: e.target.value\n        }\n      })\n      console.log(this.state.userToEdit)\n    }\n\n  render() {\n    console.log(this.state.user)\n    return (\n      <div>\n        <h1>Hello, {this.state.user.username}</h1>\n        {this.state.user.locations &&\n        this.state.user.locations.map((r, i) => \n        <li>\n          <Link to = {`/locations/${r.id}`}>{r.name}</Link>\n          <button onClick={() => this.doDeleteLocation(r.id)}>Delete</button>\n        </li>\n        )}\n        < EditUser editUser={this.editUser} handleFormChange={this.handleFormChange} userToEdit={this.state.userToEdit}/>\n        {/* <button onClick={() => this.changeBg()}>Change Color</button> */}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ShowUser)\n","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nconst AnyReactComponent = ({ image }) => <div>{<img className=\"pin\" src={image}></img>}</div>;\n\nclass MapContainer extends Component {\n    static defaultProps = {\n        center: {\n            lat: 34.05,\n            lng: -118.21\n        },\n        zoom: 11\n    }\n\n    render (){\n        console.log(this.props.random)\n        return(\n            <div>\n                <h1>Map Container</h1>\n                <div style={{ height: '50vh', width: '90%'}}>\n                <GoogleMapReact\n                bootstrapURLKeys={{ key: 'AIzaSyBHLett8djBo62dDXj0EjCimF8Rd6E8cxg' }}\n                defaultCenter={this.props.center}\n                defaultZoom={this.props.zoom}\n                >\n                {\n                    this.props.random.map((location, i) => (\n                        <AnyReactComponent key={i}\n                            lat={location.coordinates.latitude}\n                            lng={location.coordinates.longitude}\n                            image=\"../images/pin.png\"\n                        />\n                    )\n                    )}\n                </GoogleMapReact>\n\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default MapContainer;","import styled from \"styled-components\";\n\nconst CrawlContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin: 0 auto;\npadding: 25px;\nwidth: 75vw;\nbackground-color: #ffffffa6;\n\n.pMain {\n    font-size: 25px;\n    margin: 0 2vw;\n    padding: 2vw;\n}\n\n.spanHighlight {\n    background-color: #FFED03;\n}\n\nli {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport default CrawlContainer;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport MapContainer from '../MapContainer/MapContainer';\nimport CrawlContainer from '../styles/CrawlContainer';\nimport Input from '../styles/Input';\n\nclass Locations extends Component {\n\n  state = {\n    locations: [],\n    randomCrawl: [],\n    location: ''\n  }\n  componentDidMount(){\n      this.getLocations()\n  }\n\n  getLocations = async () => {\n      try {\n        const search = await fetch('/api/v1/', {\n          method: 'POST',\n          credentials: 'include',\n          body: JSON.stringify({location: `${this.state.location}`}),\n          headers:{\n              \"Content-type\" : 'application/json'\n          }\n      })\n      \n        // const response = await fetch(\"api/v1/losangeles\");\n        const locationsParsed = await search.json();\n        console.log(locationsParsed)\n        const shuffledArray = await this.shuffleArray(locationsParsed.data);\n        this.setState({ \n          locations: locationsParsed.data,\n          randomCrawl: shuffledArray\n         })\n      } catch(err) {\n          console.log(err)\n          return err\n      }\n  }\n\n  shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n\n    return array.slice(0,5)\n  }\n\n  doAddCrawl = async (id, name, url) => {\n    const { currentUser } = this.props\n    const addCrawl = await fetch('/locations', {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({id, name, url, currentUser}),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    })\n    const userJson = await addCrawl.json()\n    this.props.doSetCurrentUser(userJson.user)\n  }\n\n  addAllCrawl = async (randomCrawl) => {\n    console.log('button clicked')\n    const { currentUser } = this.props\n    const addCrawl = await fetch('/locations/crawl', {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({randomCrawl, currentUser}),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    })\n    const userJson = await addCrawl.json()\n    this.props.doSetCurrentUser(userJson.user)\n  }\n\n  handleChange = (e) => {\n    this.setState({\n        [e.currentTarget.name]: e.currentTarget.value\n      })}\n\n  render() {\n    // const random = this.shuffleArray(this.state.locations);\n    const random = this.state.randomCrawl;\n    const location = this.state.location;\n    //   console.log(randomNumber)\n    return (\n      <CrawlContainer>\n        <form>\n          <label>Enter Location < Input type=\"text\" name=\"location\" onChange={this.handleChange} value={location} /></label>\n          < Input type='Submit' />\n        </form>\n        <div>\n        { this.props.currentUser ?\n      \n        <button onClick={() => this.addAllCrawl(random)}>Add Crawl</button>\n        : <h3><span className=\"spanHighlight\">log-in to add a crawl</span></h3>\n        }\n        <h1>East LA Taco Crawl</h1>\n         {random.map((location, i) => (\n             <li key={i}><a href={location.url}>{location.name}</a><br />\n             <img src={location.image_url} width=\"100px\"></img><br />\n             {location.location.display_address} <br />\n             <h3>rating: <span className=\"spanHighlight\">{location.rating}</span> Review Count: <span className=\"spanHighlight\">{location.review_count}</span></h3><br />\n             {\n             this.props.currentUser\n             && !this.props.currentUser.locations.some( r => r.id === location.id)\n             && <button onClick={() => this.doAddCrawl\n            (location.id, location.name)}>Add</button> \n             }\n             </li>\n         ))}</div>\n         <div>< MapContainer random={random} /></div>\n      </CrawlContainer>\n    )\n  }\n}\n\nexport default withRouter(Locations)","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport Input from '../styles/Input';\nimport Button from '../styles/Button';\n\nclass Register extends Component {\n  state = {\n    username: '',\n    password: '',\n    email: '',\n    logged: false\n  }\n\n  changeHandler = e => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n  };\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    const registerResponse = await fetch('/users', {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify(this.state),\n        headers:{\n            \"Content-type\" : 'application/json'\n        }\n    })\n\n    const parsedResponse = await registerResponse.json();\n    console.log(parsedResponse)\n    if(parsedResponse.user) {\n      this.props.doSetCurrentUser(parsedResponse.user)\n        this.setState({\n            logged: true,\n        })\n    }\n}\n\n  render() {\n    const {username, password, email} = this.state\n    \n    return(\n      <div>\n        {\n          this.state.logged\n            ? <Redirect to={`/users/${this.props.currentUser._id}`} />\n            : <RegisterForm \n                changeHandler={this.changeHandler}\n                onSubmit={this.onSubmit}\n                username={username}\n                password={password}\n                email={email}\n              />\n        }\n      </div>\n\n    )\n  }\n}\n\nconst RegisterForm = ({changeHandler, onSubmit, username, password, email}) =>\n  <form onSubmit={e => onSubmit(e)}>\n    <label htmlFor=\"username\">Username</label>\n    <Input onChange={e => changeHandler(e)}type=\"text\" name='username' placeholder='username' value={username}/><br />\n    <label htmlFor=\"password\">Password</label>\n    <Input onChange={e => changeHandler(e)}type=\"password\" name='password' placeholder='password' value={password}/><br />\n    <label htmlFor=\"password\">Email</label>\n    <Input onChange={e => changeHandler(e)}type=\"text\" name='email' placeholder='email' value={email}/><br />\n    <Button type='submit'>SUBMIT</Button>\n  </form>\n\n\nexport default Register","import React, { Component } from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom'\n\nimport NavBar from './component/NavBar/NavBar'\nimport Login from './component/Login/Login'\nimport Home from './component/Home/Home'\nimport ShowUser from './component/ShowUser/ShowUser'\nimport LocationsContainer from './component/LocationsContainer/LocationsContainer';\nimport Register from './component/Register/Register';\n\nimport * as routes from './constants/routes';\n// import Body from './component/styles/Body';\nimport './index.css';\n\n\n\nclass App extends Component {\n  state = {\n    currentUser: null\n  }\n\ndoSetCurrentUser = user =>\n  this.setState({\n    currentUser: user\n})\n\ndoLogout = () => {\n  this.setState({\n    currentUser: null\n  })\n  this.props.history.push(routes.HOME)\n}\n\n  componentDidMount(){\n\n  }\n\n  // doFetchYelp = e => {\n  //   e.preventDefault()\n  //   console.log('')\n  // }s\n  \n  render() {\n    const {currentUser} = this.state\n    return (\n      <div>\n        {/* <Body> */}\n        <h1>hello</h1>\n        <NavBar currentUser={currentUser} doLogout={this.doLogout}/>\n        <Switch>\n          <Route exact path={routes.HOME} render={() => < Home />} />\n          <Route exact path={routes.LOCATIONS} render={() => <LocationsContainer  currentUser={currentUser} doSetCurrentUser={this.doSetCurrentUser} />} />\n          {/* <Route exact path={routes.USERS} render={() => <div>My Profile</div>} /> */}\n          <Route exact path={`${routes.USERS}/:id`} render={() => <ShowUser currentUser={currentUser} doSetCurrentUser={this.doSetCurrentUser}/>} />\n          <Route exact path={routes.REGISTER} render={() => <Register currentUser={this.state.currentUser} doSetCurrentUser={this.doSetCurrentUser}/>} />\n          <Route exact path={routes.LOGIN} render={() => <Login currentUser={currentUser} doSetCurrentUser={this.doSetCurrentUser}/>} />\n          <Route render={() => <div>NOT FOUND</div>} />\n        </Switch>\n        {/* </Body> */}\n      </div>\n    );\n  }\n}\n\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n    <App />\n    </Router>, \n    document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}